openapi: 3.0.3
info:
  title: Proyecto 3
  version: 1.0.0
  description: "\n        API creada para cumplir con los requisitos del proyecto\
    \ sociotecnologico de la uptaiet\n    "
paths:
  /api/v1/blacklist/:
    post:
      operationId: api_v1_blacklist_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /api/v1/categories/:
    get:
      operationId: api_v1_categories_list
      description: Get all categories
      summary: Get all categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategorySerializersList'
          description: ''
    post:
      operationId: api_v1_categories_create
      description: Create a category
      summary: Create a category
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySerializers'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: api_v1_categories_retrieve
      description: Get a category
      summary: Get a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySerializers'
          description: ''
    put:
      operationId: api_v1_categories_update
      description: Update a category
      summary: Update a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySerializers'
          description: ''
    patch:
      operationId: api_v1_categories_partial_update
      description: Get all categories and create a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategorySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategorySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategorySerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySerializers'
          description: ''
    delete:
      operationId: api_v1_categories_destroy
      description: Delete a category
      summary: Delete a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/categories/{id}/plates/:
    get:
      operationId: api_v1_categories_plates_retrieve
      description: Get all plates by category
      summary: Get all plates by category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySerializers'
          description: ''
  /api/v1/events/:
    get:
      operationId: api_v1_events_list
      description: Get all events
      summary: Get all events
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: api_v1_events_create
      description: Create an event
      summary: Create an event
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/{id}/:
    get:
      operationId: api_v1_events_retrieve
      description: Get an event
      summary: Get an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_v1_events_update
      description: Update an event
      summary: Update an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: api_v1_events_partial_update
      description: Viewset for events
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_v1_events_destroy
      description: Delete an event
      summary: Delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/{id}/restore/:
    patch:
      operationId: api_v1_events_restore_partial_update
      description: Restore a trashed event
      summary: Restore a trashed event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/{id}/trash/:
    get:
      operationId: api_v1_events_trash_retrieve
      description: Get a trashed event
      summary: Get a trashed event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/trash/all/:
    get:
      operationId: api_v1_events_trash_all_retrieve
      description: Get all trashed events
      summary: Get all trashed events
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/example/:
    get:
      operationId: api_v1_example_retrieve
      description: GET request.
      parameters:
      - in: query
        name: example
        schema:
          type: string
        description: Example query parameter
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/order/plates/:
    get:
      operationId: api_v1_order_plates_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderPlatesSerializersList'
          description: ''
    post:
      operationId: api_v1_order_plates_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPlatesSerializers'
          description: ''
  /api/v1/order/plates/{id}/:
    get:
      operationId: api_v1_order_plates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order plates.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPlatesSerializers'
          description: ''
    put:
      operationId: api_v1_order_plates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order plates.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPlatesSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPlatesSerializers'
          description: ''
    patch:
      operationId: api_v1_order_plates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order plates.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderPlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderPlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderPlatesSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPlatesSerializers'
          description: ''
    delete:
      operationId: api_v1_order_plates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order plates.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderSerializersList'
          description: ''
    post:
      operationId: api_v1_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSerializers'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: api_v1_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSerializers'
          description: ''
    put:
      operationId: api_v1_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSerializers'
          description: ''
    patch:
      operationId: api_v1_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSerializers'
          description: ''
    delete:
      operationId: api_v1_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payments/:
    get:
      operationId: api_v1_payments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentSerializersList'
          description: ''
    post:
      operationId: api_v1_payments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSerializers'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: api_v1_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSerializers'
          description: ''
    put:
      operationId: api_v1_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSerializers'
          description: ''
    patch:
      operationId: api_v1_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSerializers'
          description: ''
    delete:
      operationId: api_v1_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/paymethods/:
    get:
      operationId: api_v1_paymethods_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayMethodSerializersList'
          description: ''
    post:
      operationId: api_v1_paymethods_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMethodSerializers'
          description: ''
  /api/v1/paymethods/{id}/:
    get:
      operationId: api_v1_paymethods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMethodSerializers'
          description: ''
    put:
      operationId: api_v1_paymethods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayMethodSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMethodSerializers'
          description: ''
    patch:
      operationId: api_v1_paymethods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayMethodSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayMethodSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayMethodSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayMethodSerializers'
          description: ''
    delete:
      operationId: api_v1_paymethods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/plates/:
    get:
      operationId: api_v1_plates_list
      description: Get all plates
      summary: Get all plates
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlatesSerializersList'
          description: ''
    post:
      operationId: api_v1_plates_create
      description: Create a plate
      summary: Create a plate
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesSerializers'
          description: ''
  /api/v1/plates/{id}/:
    get:
      operationId: api_v1_plates_retrieve
      description: Get a plate
      summary: Get a plate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plates.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesSerializers'
          description: ''
    put:
      operationId: api_v1_plates_update
      description: Update a plate
      summary: Update a plate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plates.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlatesSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesSerializers'
          description: ''
    patch:
      operationId: api_v1_plates_partial_update
      description: Get all plates and create a plate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plates.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlatesSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlatesSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlatesSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatesSerializers'
          description: ''
    delete:
      operationId: api_v1_plates_destroy
      description: Delete a plate
      summary: Delete a plate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plates.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/:
    get:
      operationId: api_v1_profiles_list
      description: Profile Viewset
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileSerializersList'
          description: ''
    post:
      operationId: api_v1_profiles_create
      description: Profile Viewset
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSerializers'
          description: ''
  /api/v1/profiles/{id}/:
    get:
      operationId: api_v1_profiles_retrieve
      description: Profile Viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSerializers'
          description: ''
    put:
      operationId: api_v1_profiles_update
      description: Profile Viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSerializers'
          description: ''
    patch:
      operationId: api_v1_profiles_partial_update
      description: Profile Viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSerializers'
          description: ''
    delete:
      operationId: api_v1_profiles_destroy
      description: Profile Viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/qr/:
    get:
      operationId: api_v1_qr_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_qr_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/token/:
    post:
      operationId: api_v1_token_create
      description: Custom token view.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/token/refresh/:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify/:
    post:
      operationId: api_v1_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/users/:
    post:
      operationId: api_v1_users_create
      description: Create a new user.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    CategorySerializers:
      type: object
      description: Serializer for Category
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
      required:
      - id
      - title
    Event:
      type: object
      description: Event serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - date
      - id
      - title
      - updated_at
    OrderPlatesSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        order_id:
          type: integer
        plates_id:
          type: integer
      required:
      - id
      - order_id
      - plates_id
    OrderSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        address:
          type: string
          maxLength: 255
        description:
          type: string
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        user_id:
          type: integer
        plates_id:
          type: integer
      required:
      - address
      - date
      - description
      - id
      - plates_id
      - total
      - user_id
    PaginatedCategorySerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategorySerializers'
    PaginatedEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedOrderPlatesSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderPlatesSerializers'
    PaginatedOrderSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderSerializers'
    PaginatedPayMethodSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PayMethodSerializers'
    PaginatedPaymentSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSerializers'
    PaginatedPlatesSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlatesSerializers'
    PaginatedProfileSerializersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileSerializers'
    PatchedCategorySerializers:
      type: object
      description: Serializer for Category
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
    PatchedEvent:
      type: object
      description: Event serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
    PatchedOrderPlatesSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        order_id:
          type: integer
        plates_id:
          type: integer
    PatchedOrderSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        address:
          type: string
          maxLength: 255
        description:
          type: string
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        user_id:
          type: integer
        plates_id:
          type: integer
    PatchedPayMethodSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        currency:
          type: string
          maxLength: 5
        method:
          type: string
          maxLength: 60
    PatchedPaymentSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        order_id:
          type: integer
        method_id:
          type: integer
    PatchedPlatesSerializers:
      type: object
      description: Serializer for Plates
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          maxLength: 250
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        categories:
          type: array
          items:
            type: integer
    PatchedProfileSerializers:
      type: object
      description: Profile serializer.
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        dni:
          type: string
          maxLength: 12
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
    PayMethodSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        currency:
          type: string
          maxLength: 5
        method:
          type: string
          maxLength: 60
      required:
      - currency
      - id
      - method
    PaymentSerializers:
      type: object
      description: This module contains the serializers for the sales app.
      properties:
        id:
          type: integer
          readOnly: true
        order_id:
          type: integer
        method_id:
          type: integer
      required:
      - id
      - method_id
      - order_id
    PlatesSerializers:
      type: object
      description: Serializer for Plates
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 250
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          maxLength: 250
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        categories:
          type: array
          items:
            type: integer
      required:
      - categories
      - id
      - price
      - title
    ProfileSerializers:
      type: object
      description: Profile serializer.
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        dni:
          type: string
          maxLength: 12
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - created_at
      - dni
      - email
      - id
      - phone_number
      - updated_at
      - user
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
